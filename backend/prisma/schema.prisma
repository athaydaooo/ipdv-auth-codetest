datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid()) @db.Uuid
  name      String
  email     String     @unique
  password  String
  isActive  Boolean    @default(true)
  roles     UserRole[]
  sessions  Session[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Role {
  id          String       @id @default(uuid()) @db.Uuid
  name        String       @unique
  description String?
  users       UserRole[]
  modules     RoleModule[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Module {
  id          String       @id @default(uuid()) @db.Uuid
  name        String       @unique
  description String?
  roles       RoleModule[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model UserRole {
  userId     String   @db.Uuid
  roleId     String   @db.Uuid
  user       User     @relation(fields: [userId], references: [id])
  role       Role     @relation(fields: [roleId], references: [id])
  assignedAt DateTime @default(now())

  @@id([userId, roleId])
}

model RoleModule {
  roleId     String   @db.Uuid
  moduleId   String   @db.Uuid
  role       Role     @relation(fields: [roleId], references: [id])
  module     Module   @relation(fields: [moduleId], references: [id])
  assignedAt DateTime @default(now())

  @@id([roleId, moduleId])
}

model Session {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  isRevoked Boolean  @default(false)
  updatedAt DateTime @updatedAt

  @@index([userId, token])
}
